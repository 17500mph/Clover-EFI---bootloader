#!/bin/bash

echo "==============================================="
echo "EFIFolder Pre-Install Script"
echo "==============================================="

#echo "DEBUG: $ 1 = Full path to the installation package the installer app is processing: " $1
#echo "DEBUG: $ 2 = Full path to the installation destination: " $2
#echo "DEBUG: $ 3 = Installation volume (mountpoint) to receive the payload: " $3
#echo "DEBUG: $ 4 = Root directory for the system: " $4

echo "preinstall: Path to installer....... $1"
echo "preinstall: Path to destination..... $2"
echo "preinstall: Path to dest volume..... $3"
echo "preinstall: Root of system folder... $4"

# Check target exists
if [ ! -e "$3" ]
then
    echo "$3 volume does not exist!"
    exit 1
fi

# If target volume root of current system then replace
# / with volume name.
if [ "$3" == "/" ]
then
	dest_vol="/Volumes/"$( ls -1F /Volumes | sed -n 's:@$::p' )
else
    dest_vol="$3"
fi


# ---------------------------------------------
# Preparing Backing up of Chameleon files
# ---------------------------------------------
backupRootDir="$dest_vol/EFI-Backups"
backupDir="${backupRootDir}/"$( date -j "+%F-%Hh%M" )

# Create the backup dirextory
mkdir -p "$backupDir"

# ---------------------------------------------
# Backing up Chameleon files
# ---------------------------------------------

echo " " > "${dest_vol}/Clover_Install_Log.txt"
echo "Clover EFI installer log - $( date )" >> "${dest_vol}/Clover_Install_Log.txt"
echo "Installer version: %CLOVERVERSION% r%CLOVERREVISION% EFI bootloader" >> "${dest_vol}/Clover_Install_Log.txt"
echo "======================================================" >> "${dest_vol}/Clover_Install_Log.txt"
diskutil list >> "${dest_vol}/Clover_Install_Log.txt"
echo "======================================================" >> "${dest_vol}/Clover_Install_Log.txt"

echo Backing up EFI files >> "${dest_vol}/Clover_Install_Log.txt"
echo " " >> "${dest_vol}/Clover_Install_Log.txt"

# Backup stage2
if [ -f "$dest_vol/boot" ];then
	echo "Backing up stage2 file $dest_vol/boot  to ${backupDir}/boot" >> "${dest_vol}/Clover_Install_Log.txt"
	cp -p "$dest_vol/boot" "${backupDir}/boot"
fi
if [ -f "$dest_vol/boot1" ];then
	echo "Backing up stage2 file $dest_vol/boot1 to ${backupDir}/boot1" >> "${dest_vol}/Clover_Install_Log.txt"
	cp -p "$dest_vol/boot1" "${backupDir}/boot1"
fi
if [ -f "$dest_vol/boot3" ];then
	echo "Backing up stage2 file $dest_vol/boot3 to ${backupDir}/boot3" >> "${dest_vol}/Clover_Install_Log.txt"
	cp -p "$dest_vol/boot3" "${backupDir}/boot3"
fi
if [ -f "$dest_vol/boot6" ];then
	echo "Backing up stage2 file $dest_vol/boot6 to ${backupDir}/boot6" >> "${dest_vol}/Clover_Install_Log.txt"
	cp -p "$dest_vol/boot6" "${backupDir}/boot6"
fi

# Backup /EFI directory
if [ -d "$dest_vol/EFI" ];then
     echo "Backing up $dest_vol/EFI folder to ${backupDir}/EFI"	 >> "${dest_vol}/Clover_Install_Log.txt"
    cp -pR "$dest_vol/EFI" "${backupDir}/EFI"
fi

echo "======================================================" >> "${dest_vol}/Clover_Install_Log.txt"

chflags -R nohidden "$backupDir" # Remove the invisible flag of files in the backups

find "$backupRootDir" -type d -depth 1 -empty -exec rmdir {} \; # Remove empty directories
rm -df "$backupRootDir"

# Remove efi files of old revision which were not come from pkg installer.

if [ -d "$dest_vol/EFI/drivers" ];then
	rm -rf "$dest_vol/EFI/drivers"
fi
if [ -d "$dest_vol/EFI/font" ];then
	rm -rf "$dest_vol/EFI/font"
fi
if [ -f "$dest_vol/EFI/drivers32/FSInject.efi" ];then
	rm -f "$dest_vol/EFI/drivers32/FSInject.efi"
fi
if [ -f "$dest_vol/EFI/drivers32/VBoxExt2.efi" ];then
	rm -f "$dest_vol/EFI/drivers32/VBoxExt2.efi"
fi
if [ -f "$dest_vol/EFI/drivers32/VBoxIso9600.efi" ];then
	rm -f "$dest_vol/EFI/drivers32/VBoxIso9600.efi"
fi
if [ -f "$dest_vol/EFI/drivers64/FSInject.efi" ];then
	rm -f "$dest_vol/EFI/drivers64/FSInject.efi"
fi
if [ -f "$dest_vol/EFI/drivers64/VBoxExt2.efi" ];then
	rm -f "$dest_vol/EFI/drivers64/VBoxExt2.efi"
fi
if [ -f "$dest_vol/EFI/drivers64/VBoxIso9600.efi" ];then
	rm -f "$dest_vol/EFI/drivers64/VBoxIso9600.efi"
fi

# ---------------------------------------------
# Cleanup
# ---------------------------------------------

# remove any temporary boot sector files if they exist


#!/bin/bash

echo "==============================================="
echo "Post Post-Install Script"
echo "==============================================="

#echo "DEBUG: $ 1 = Full path to the installation package the installer app is processing: " $1
#echo "DEBUG: $ 2 = Full path to the installation destination: " $2
#echo "DEBUG: $ 3 = Installation volume (mountpoint) to receive the payload: " $3
#echo "DEBUG: $ 4 = Root directory for the system: " $4

echo "preinstall: Path to installer....... $1"
echo "preinstall: Path to destination..... $2"
echo "preinstall: Path to dest volume..... $3"
echo "preinstall: Root of system folder... $4"

#############################################################################

fixpermsall ()
{
	# $1 path
	find "${1}" -type f -exec chmod 666 {} \;
	find "${1}" -type d -exec chmod 777 {} \;
	chown -R 0:0 "${1}"
}

osxvolume="${3}"
bootervolumename="EFI"
bootvolume="/Volumes/${bootervolumename}"

# ---------------------------------------------
# 檢查 原來的 boot 類型 並安裝新的 boot
# 檢查 非 GPT EFI 分區
# ---------------------------------------------

echo " " >> "${osxvolume}/Clover_Install_Log.txt"

file "${osxvolume}/bootold" > "${osxvolume}/bootoldtype"
boottypeversion=$( grep "boot" "${osxvolume}/bootoldtype" | awk '{ print $2 }' | tr -d '}' )
echo "${boottypeversion}" >> "${osxvolume}/bootoldtype"
#echo "The original boot type = ${boottypeversion}" >> "${osxvolume}/Clover_Install_Log.txt"
if [ "${boottypeversion}" == "data" ]; then
	cp -f "${osxvolume}/bootold" "${osxvolume}/boot1"
	echo "cp -f ${osxvolume}/bootold ${osxvolume}/boot1" >> "${osxvolume}/Clover_Install_Log.txt"
	chflags hidden "${osxvolume}/boot1"
fi
rm "${osxvolume}/bootold"
rm "${osxvolume}/bootoldtype"


boottype=$( cat "${osxvolume}/boottype" )
if [ "${boottype}" == "x32" ]; then
	cd "${osxvolume}/EFI"
	perl -i -p -e "s/arch=x86_64/arch=i386/g" `find "config.plist" -type f`
fi    
if [ "${boottype}" == "x64" ]; then
	cd "${osxvolume}/EFI"
	perl -i -p -e "s/arch=i386/arch=x86_64/g" `find "config.plist" -type f`
fi


if [ -e "${osxvolume}/EFI/config.plist" ]; then
	rm -f "${osxvolume}/EFI/config-org.plist"
fi
if [ ! -e "${osxvolume}/EFI/config.plist" ]; then
	cp -f "${osxvolume}/EFI/config-org.plist" "${osxvolume}/EFI/config.plist"
	rm -f "${osxvolume}/EFI/config-org.plist"
fi
if [ -e "${osxvolume}/EFI/BOOT/refit.conf" ]; then
	cp -f "${osxvolume}/EFI/BOOT/refit.conf" "${osxvolume}/EFI/BOOT/refit.conf-old"
	cp -f "${osxvolume}/EFI/BOOT/refit.conf-default" "${osxvolume}/EFI/BOOT/refit.conf"
	rm -f "${osxvolume}/EFI/BOOT/refit.conf-default"
fi
if [ ! -e "${osxvolume}/EFI/BOOT/refit.conf" ]; then
	cp -f "${osxvolume}/EFI/BOOT/refit.conf-default" "${osxvolume}/EFI/BOOT/refit.conf"
	rm -f "${osxvolume}/EFI/BOOT/refit.conf-default"
fi
rm -f "${osxvolume}/EFI/BOOT/refit-*.conf"

fixpermsall "${osxvolume}/EFI"

if [ ! -e "/etc/rc.local" ]; then
	cp -f "${osxvolume}/etc/rc.local" "/etc/rc.local"
	cp -f "${osxvolume}/etc/rc.shutdown.local" "/etc/rc.shutdown.local"
fi
chmod 644 "/etc/rc.local"
chown root:wheel "/etc/rc.local"
chmod 644 "/etc/rc.shutdown.local"
chown root:wheel "/etc/rc.shutdown.local"	

if [ -e "${osxvolume}/etc/rc.local" ]; then
	chmod 644 "${osxvolume}/etc/rc.local"
	chown root:wheel "${osxvolume}/etc/rc.local"
	chmod 644 "${osxvolume}/etc/rc.shutdown.local"
	chown root:wheel "${osxvolume}/etc/rc.shutdown.local"
fi

# ---------------------------------------------
# 檢查 原來的 boot 類型 並安裝新的 boot
# 檢查 GPT EFI 分區
# ---------------------------------------------

installtype=$( cat "${osxvolume}/boot0type" )

if [ "$( df | grep EFI )" ] && [ "${installtype}" == "boot0hfsEFI" ]; then

	backupRootDir="${bootvolume}/EFI-Backups"
	backupDir="${backupRootDir}/"$( date -j "+%F-%Hh%M" )
	# Create the backup dirextory
	mkdir -p "${backupDir}"
	# Backup stage2
	if [[ -f "${bootvolume}/boot" ]];then
		cp -p "${bootvolume}/boot" "${backupDir}/boot"
		echo "cp -p ${bootvolume}/boot ${backupDir}/boot" >> "${osxvolume}/Clover_Install_Log.txt"
	fi
	if [[ -f "${bootvolume}/boot1" ]];then
		cp -p "${bootvolume}/boot1" "${backupDir}/boot1"
		echo "cp -p ${bootvolume}/boot1 ${backupDir}/boot1" >> "${osxvolume}/Clover_Install_Log.txt"
	fi
	if [[ -f "${bootvolume}/boot3" ]];then
		cp -p "${bootvolume}/boot3" "${backupDir}/boot3"
		echo "cp -p ${bootvolume}/boot3 ${backupDir}/boot3" >> "${osxvolume}/Clover_Install_Log.txt"
	fi
	if [[ -f "${bootvolume}/boot6" ]];then
		cp -p "${bootvolume}/boot6" "${backupDir}/boot6"
		echo "cp -p ${bootvolume}/boot6 ${backupDir}/boot6" >> "${osxvolume}/Clover_Install_Log.txt"
	fi

	# Backup /EFI directory
	if [[ -d "${bootvolume}/EFI" ]];then
		sudo cp -pR "${bootvolume}/EFI" "${backupDir}/EFI"
		echo "cp -pR ${bootvolume}/EFI ${backupDir}/EFI" >> "${osxvolume}/Clover_Install_Log.txt"
	fi
	find "${backupRootDir}" -type d -depth 1 -empty -exec rmdir {} \; # Remove empty directories
	rm -df "${backupRootDir}"


	cp -f "${bootvolume}/boot" "${bootvolume}/bootold"
	cp -f "${osxvolume}/boot" "${bootvolume}/boot"
	cp -f "${osxvolume}/boot3" "${bootvolume}/boot3"
	cp -f "${osxvolume}/boot6" "${bootvolume}/boot6"
	chflags hidden "${bootvolume}/boot"
	chflags hidden "${bootvolume}/boot3"
	chflags hidden "${bootvolume}/boot6"
	
	echo "cp -f ${osxvolume}/boot ${bootvolume}/boot" >> "${osxvolume}/Clover_Install_Log.txt"
	echo "cp -f ${osxvolume}/boot3 ${bootvolume}/boot3" >> "${osxvolume}/Clover_Install_Log.txt"
	echo "cp -f ${osxvolume}/boot6 ${bootvolume}/boot6" >> "${osxvolume}/Clover_Install_Log.txt"

	file "${bootvolume}/bootold" > "${bootvolume}/bootoldtype"
	boottypeversion=$( grep "boot" "${bootvolume}/bootoldtype" | awk '{ print $2 }' | tr -d '}' )
	echo "${boottypeversion}" >> "${bootvolume}/bootoldtype"
	if [ "${boottypeversion}" == "data" ]; then
		cp -f "${bootvolume}/bootold" "${bootvolume}/boot1"
		chflags hidden "${bootvolume}/boot1"
	fi
	rm "${bootvolume}/bootold"
	rm "${bootvolume}/bootoldtype"

	if [ ! -e "${bootvolume}/boot1" ]; then
		cp -f "${osxvolume}/boot1" "${bootvolume}/boot1"
		echo "cp -f ${osxvolume}/boot1 ${bootvolume}/boot1" >> "${osxvolume}/Clover_Install_Log.txt"
	fi
	
	if [ -e "${bootvolume}/EFI/config.plist" ]; then
		cp -f "${bootvolume}/EFI/config.plist" "${bootvolume}/EFI/config-oldEFI.plist"
	fi
	cp -Rf "${osxvolume}/EFI/" "${bootvolume}/EFI/"
	if [ -e "${bootvolume}/EFI/config-oldEFI.plist" ]; then
		cp -f "${bootvolume}/EFI/config-oldEFI.plist" "${bootvolume}/EFI/config.plist"
		rm "${bootvolume}/EFI/config-oldEFI.plist"
	fi
	
	boottype=$( cat "${osxvolume}/boottype" )

	if [ "${boottype}" == "x32" ]; then
		cd "${bootvolume}/EFI"
		perl -i -p -e "s/arch=x86_64/arch=i386/g" `find "config.plist" -type f`
	fi    
	if [ "${boottype}" == "x64" ]; then
		cd "${bootvolume}/EFI"
		perl -i -p -e "s/arch=i386/arch=x86_64/g" `find "config.plist" -type f`
	fi
	if [ -e "${bootvolume}/EFI/EFI_Install_Log.txt" ]; then
		rm -f "${bootvolume}/EFI/EFI_Install_Log.txt"
	fi

	fixpermsall "${bootvolume}/"
	
	touch "${bootvolume}/.metadata_never_index"
	rm -Rf "${bootvolume}/.fseventsd/"
	mkdir -p "${bootvolume}/.fseventsd"
	touch "${bootvolume}/.fseventsd/no_log"
fi

echo " " >> "${osxvolume}/Clover_Install_Log.txt"
ls -la "/etc/rc.local" >> "${osxvolume}/Clover_Install_Log.txt"
ls -la "/etc/rc.shutdown.local" >> "${osxvolume}/Clover_Install_Log.txt"
echo " " >> "${osxvolume}/Clover_Install_Log.txt"
ls -la "${osxvolume}/etc/rc.local" >> "${osxvolume}/Clover_Install_Log.txt"
ls -la "${osxvolume}/etc/rc.shutdown.local" >> "${osxvolume}/Clover_Install_Log.txt"
	
echo " " >> "${osxvolume}/Clover_Install_Log.txt"
echo "======================================================" >> "${osxvolume}/Clover_Install_Log.txt"
echo "=========== Clover EFI Installation Finish ===========" >> "${osxvolume}/Clover_Install_Log.txt"
echo "======================================================" >> "${osxvolume}/Clover_Install_Log.txt"
# ---------------------------------------------
# Cleanup
# ---------------------------------------------

# remove any temporary boot sector files if they exist

if [ -e "${osxvolume}/tmpcham" ]; then
	rm -rf "${osxvolume}/tmpcham"
fi
if [ -e "${bootvolume}/EFI" ]; then
	cp -f "${osxvolume}/Clover_Install_Log.txt" "${bootvolume}/EFI/Clover_Install_Log.txt"
fi
if [ -e "${osxvolume}/Clover_Install_Log.txt" ]; then
	cp -f "${osxvolume}/Clover_Install_Log.txt" "${osxvolume}/EFI/Clover_Install_Log.txt"
	rm -f "${osxvolume}/Clover_Install_Log.txt"
fi
if [ -e "${osxvolume}/EFI/EFI_Install_Log.txt" ]; then
	rm -f "${osxvolume}/EFI/EFI_Install_Log.txt"
fi
rm -f "${osxvolume}/boot0type"
rm -f "${osxvolume}/boottype"
rm -f "${osxvolume}/formattype"


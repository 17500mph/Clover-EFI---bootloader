#!/bin/bash

echo "==============================================="
echo "Post Post-Install Script"
echo "==============================================="

#echo "DEBUG: $ 1 = Full path to the installation package the installer app is processing: " $1
#echo "DEBUG: $ 2 = Full path to the installation destination: " $2
#echo "DEBUG: $ 3 = Installation volume (mountpoint) to receive the payload: " $3
#echo "DEBUG: $ 4 = Root directory for the system: " $4

echo "preinstall: Path to installer....... $1"
echo "preinstall: Path to destination..... $2"
echo "preinstall: Path to dest volume..... $3"
echo "preinstall: Root of system folder... $4"

# Check target exists
if [ ! -e "$3" ]
then
    echo "$3 volume does not exist!"
    exit 1
fi

# If target volume root of current system then replace
# / with volume name.
if [ "$3" == "/" ]
then
	dest_vol="/Volumes/"$( ls -1F /Volumes | sed -n 's:@$::p' )
else
    dest_vol="$3"
fi    


# ---------------------------------------------
# Preparing Backing up of Chameleon files
# ---------------------------------------------
backupRootDir="$dest_vol/EFI-Backups"
backupDir="${backupRootDir}/"$( date -j "+%F-%Hh%M" )

# Create the backup dirextory
mkdir -p "$backupDir"
	
# ---------------------------------------------
# Backing up Chameleon files
# ---------------------------------------------


# Backup stage2
if [[ -f "$dest_vol/boot" ]];then
	# echo "Backing up stage2 file $dest_vol/boot to ${backupDir}/boot"
	cp -p "$dest_vol/boot" "${backupDir}/boot"
fi
if [[ -f "$dest_vol/boot1" ]];then
	# echo "Backing up stage2 file $dest_vol/boot to ${backupDir}/boot"
	cp -p "$dest_vol/boot1" "${backupDir}/boot1"
fi
if [[ -f "$dest_vol/boot2" ]];then
	# echo "Backing up stage2 file $dest_vol/boot to ${backupDir}/boot"
	cp -p "$dest_vol/boot2" "${backupDir}/boot2"
fi
	
# Backup /EFI directory
if [[ -d "$dest_vol/EFI" ]];then
	
    # echo "Backing up $dest_vol/EFI folder to ${backupDir}/EFI"	
    cp -pR "$dest_vol/EFI" "${backupDir}/EFI"
fi

chflags -R nohidden "$backupDir" # Remove the invisible flag of files in the backups

find "${backupRootDir}" -type d -depth -empty -exec rmdir {} \; # Remove empty directories

if [[ -f "$dest_vol/EFI/drivers/FSInject32.efi" ]];then
	rm -f "$dest_vol/EFI/drivers/FSInject32.efi"
fi
if [[ -f "$dest_vol/EFI/drivers/FSInject-32.efi" ]];then
	rm -f "$dest_vol/EFI/drivers/FSInject-32.efi"
fi
if [[ -f "$dest_vol/EFI/drivers/FSInject64.efi" ]];then
	rm -f "$dest_vol/EFI/drivers/FSInject64.efi"
fi
if [[ -f "$dest_vol/EFI/drivers/FSInject-64.efi" ]];then
	rm -f "$dest_vol/EFI/drivers/FSInject-64.efi"
fi
if [[ -d "$dest_vol/EFI/font" ]];then
	rm -rf "$dest_vol/EFI/font"
fi

# ---------------------------------------------
# Cleanup
# ---------------------------------------------

# remove any temporary boot sector files if they exist

#if [ -e "$dest_vol/EFI/font" ]; then
#	rm -rf "$dest_vol/EFI/font"
#fi

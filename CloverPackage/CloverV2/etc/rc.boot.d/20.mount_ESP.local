#!/bin/bash

#
# Mount ESP script for Clover
#
# Â© JrCs 2013

#
# Mount ESP (EFI System Partition)
#
# NVRam keys used:
#    Clover.MountEFI: Yes|diskX|GUID [default No]

# Check that all variable are bound
set -u

#
# Source clover rc library if needed
#
if [[ ! "$(type -t GetNVRamKey)" == "function" ]]; then
    selfDir=$(cd $(dirname "$0") && pwd -P)
    source "${selfDir}"/../rc.clover.lib
fi

# Variables
ESPMountPoint=/Volumes/EFI

# Debug mode ?
[[ "$DEBUG" -ne 0 ]] && set -x

# Turn on a case-insensitive matching
shopt -s nocasematch

function mountESP {
    local arg="$1"
    local exitcode=1
    local guidRegExp='[[:xdigit:]]+-[[:xdigit:]]+-[[:xdigit:]]+-[[:xdigit:]]+'

    # Umount previously mount partition
    /usr/sbin/diskutil umount "${ESPMountPoint}" &>/dev/null
    [[ ! -d "${ESPMountPoint}" ]] && mkdir -p "${ESPMountPoint}"

    if [[ "$arg" == Yes ]]; then
        ESPDevice=$(diskutil info / | sed -n 's/.*Part of Whole: *//p')
    elif [[ "$arg" =~ $guidRegExp ]]; then
        /usr/sbin/diskutil mount -mountPoint "${ESPMountPoint}" "$arg"
        return $?
    else
        ESPDevice="$arg"
    fi

    # keep only the device name (remove /dev/ and partition (aka s1))
    ESPDevice=$(echo "$ESPDevice" | sed -E 's@^.*/?(disk[0-9]*).*@\1@')

    if [[ "$ESPDevice" =~ ^disk[0-9]+$ ]]; then
        local ESP="${ESPDevice}s1"

        umount /dev/${ESP} 2>/dev/null
        exitcode=1
        for fstype in msdos hfs; do
            mount -t $fstype /dev/$ESP "${ESPMountPoint}" &>/dev/null
            exitcode=$?
            [[ $exitcode -eq 0 ]] && break
        done
        if [[ $exitcode -ne 0 ]]; then
            echo "Failed to mount $ESP at $ESPMountPoint"
        else
            echo "EFI partition ($ESP) mount at $ESPMountPoint"
        fi
    else
        echo "Invalid value '$ESPDevice'"
    fi
    return $exitcode
}

# Clover.MountEFI=Yes|diskX|GUID [default No]
mountEFIValue=$(GetNVRamKey 'Clover.MountEFI' || echo 'No')
if [[ "$mountEFIValue" == "No" ]]; then
    echo "Not auto mounting EFI partition"
else
    mountESP "$mountEFIValue"
    [[ $? -ne 0 ]] && rmdir "$ESPMountPoint" &>/dev/null
fi

# Local Variables:      #
# mode: ksh             #
# tab-width: 4          #
# indent-tabs-mode: nil #
# End:                  #
#
# vi: set expandtab ts=4 sw=4 sts=4: #

#!/bin/bash

#
# rc.local startup script
#
# Initial - ?
# Edited - apianti 2013-01-13
#

#
# Manage boot log
#
theBootLog=boot.log
theLogPath=system.log
theLineCount=3000
theTempPath=temp.log

#
# If the line count > 0 trim the previous log to line count
#
if test $theLineCount -gt 0 ; then
   if [ -f $theLogPath ]; then
      tail -n $theLineCount $theLogPath > $theTempPath
      cat ${theTempPath} > ${theLogPath}
   fi
fi

#
# Print the current timestamp
#
echo "-------------------------------" > $theBootLog
date "+DATE: %Y-%m-%d TIME: %H:%M:%S" >> $theBootLog
echo "-------------------------------" >> $theBootLog

#
# Get the current boot log
#
logdump=$(ioreg -lw0 -pIODeviceTree | grep boot-log)
modified1=${logdump#*'boot-log'}
modified2=${modified1#*'<'}
echo "${modified2%%'>'*}" > ${theTempPath}
xxd -r -p ${theTempPath} >> ${theBootLog}
rm ${theTempPath}
cat ${theBootLog} >> ${theLogPath}

#
# Parse boot flags
#
theBootFlags=$(nvram -p  | grep "MountEFI=Yes")
theRoot=

for theBootFlag in $theBootFlags ; do
   #
   # Split the flag and value
   #  theBootFlag will be the lowercase flag name
   #  theBootFlagValue will be the flag value as is
   #  theBootFlagIValue will be the lowercase flag value
   #
   theBootFlagValue=
   theBootFlagIValue=
   if [ "x$(echo $theBootFlag | grep =)" != "x" ]; then
      theBootFlagValue=${theBootFlag#*'='}
      theBootFlagIValue=$(echo $theBootFlagValue | tr '[:upper:]' '[:lower:]')
   fi
   theBootFlag=$(echo ${theBootFlag%%'='*} | tr '[:upper:]' '[:lower:]')
   #
   # Parse the MountEFI= parameter
   #
   if [ "x$theBootFlag" == "xmountefi" ]; then
      if [ "x$(echo $theBootFlagIValue)" == "xyes" ]; then
         #
         # Set the EFI partition of the root volume
         #
         theRoot=$(diskutil info / | grep 'Part of Whole:' | awk '{print $4}')
      elif [ "x$theBootFlagValue" != "x" ]; then
         #
         # Set EFI partition disk manually
         #
         if [ "x$(diskutil list | grep ${theBootFlagValue})" != "x" ]; then
            theRoot=$theBootFlagValue
         fi
      fi   
   fi
   #
   # Add additional flags here
   #
   # if [ "x$theBootFlag" == "xflagname" ]; then
   #    if [ "x$theBootFlagValue" == "xsomevalue" ]; then
   #       # Do something
   #    fi
   # fi
done

#
# Check for EFI mounting
#
if [ "x$theRoot" == "x" ]; then
   echo "Not auto mounting EFI partition"
   exit
fi

#
# Check the EFI mount point exists or create it
#
if [ ! -d /Volumes/EFI ]; then
   mkdir /Volumes/EFI
   if [ ! -d /Volumes/EFI ]; then
      echo "Could not create /Volumes/EFI to mount ${theRoot}s1"
      exit
   fi
fi

#
# Mount the EFI volume
#
mount -t msdos /dev/"${theRoot}"s1 /Volumes/EFI && exit
echo "Failed to mount ${theRoot}s1 at /Volumes/EFI"

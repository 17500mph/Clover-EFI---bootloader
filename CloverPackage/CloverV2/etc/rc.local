#!/bin/bash

#
# rc.local startup script
#
# Initial - ?
# Edited - apianti 2013-01-13
#

#
# Manage boot log
#
theBootLog=boot.log
theLogPath=system.log
theLineCount=3000
theTempPath=temp.log

#
# If the line count > 0 trim the previous log to line count
#
if test $theLineCount -gt 0 ; then
   if [ -f $theLogPath ]; then
      tail -n $theLineCount $theLogPath > $theTempPath
      cat ${theTempPath} > ${theLogPath}
   fi
fi

#
# Print the current timestamp
#
echo "-------------------------------" > $theBootLog
date "+DATE: %Y-%m-%d TIME: %H:%M:%S" >> $theBootLog
echo "-------------------------------" >> $theBootLog

#
# Get the current boot log
#
logdump=`ioreg -lw0 -pIODeviceTree | grep boot-log`
modified1=${logdump#*'boot-log'}
modified2=${modified1#*'<'}
modified3=${modified2%%'>'*}
echo "$modified3" > ${theTempPath}
xxd -r -p ${theTempPath} >> ${theBootLog}
rm ${theTempPath}
cat ${theBootLog} >> ${theLogPath}

#
# Check a root volume exists
#
theRoot=`diskutil info / | grep 'Part of Whole:' | awk '{print $4}'`
if [ "x$theRoot" == "x" ]; then
   echo "No root volume found"
   exit
fi

#
# Check if the EFI mount flag is present
#
theBootFlag=`nvram -p  | grep "MountEFI=Yes"`
if [ "x$theBootFlag" == "x" ]; then
   echo "Not AutoMounting ${theRoot}s1"
   exit
fi

#
# Check the EFI mount point exists or create it
#
if [ ! -d /Volumes/EFI ]; then
   mkdir /Volumes/EFI
   if [ ! -d /Volumes/EFI ]; then
      echo "Could not create /Volumes/EFI to mount ${theRoot}s1"
      exit
   fi
fi

#
# Mount the EFI volume
#
mount -t msdos /dev/"${theRoot}"s1 /Volumes/EFI && exit
echo "Failed to mount ${theRoot}s1 at /Volumes/EFI"
